// Automatic FlutterFlow imports
import '/backend/backend.dart';
import '/backend/schema/structs/index.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/custom_code/widgets/index.dart'; // Imports other custom widgets
import '/custom_code/actions/index.dart'; // Imports custom actions
import '/flutter_flow/custom_functions.dart'; // Imports custom functions
import 'package:flutter/material.dart';
// Begin custom widget code
// DO NOT REMOVE OR MODIFY THE CODE ABOVE!

import '../actions/clear_cropp_image_share_cache.dart';

import '../../flutter_flow/flutter_flow_widgets.dart';

import 'dart:ui';
import "dart:math" show pi;
import '../../flutter_flow/flutter_flow_icon_button.dart';
import 'package:custom_image_crop/custom_image_crop.dart';
import 'package:provider/provider.dart';

class CropImageViewWidget extends StatefulWidget {
  const CropImageViewWidget({
    Key? key,
    this.width,
    this.height,
    required this.originalImage,
    required this.cropShape,
    required this.cropPercentage,
    required this.resetText,
    required this.zoomText,
    required this.rotateText,
    required this.saveText,
    required this.cancelText,
    required this.onCancel,
    required this.onCrop,
  }) : super(key: key);

  final double? width;
  final double? height;
  final FFUploadedFile originalImage;
  final String cropShape;
  final double cropPercentage;
  final String resetText;
  final String zoomText;
  final String rotateText;
  final String saveText;
  final String cancelText;
  final Future<dynamic> Function() onCancel;
  final Future<dynamic> Function() onCrop;

  @override
  _CropImageViewWidgetState createState() => _CropImageViewWidgetState();
}

class _CropImageViewWidgetState extends State<CropImageViewWidget> {
  late GlobalKey _croperKey;
  late CustomImageCropController _croppController;
  late CropImageWidgetShareState _shareState;
  late CustomCropShape _customCropShape;

  @override
  void initState() {
    super.initState();
    _croperKey = GlobalKey(debugLabel: 'myCropImageWidget');
    _croppController = CustomImageCropController();
    _shareState = CropImageWidgetShareState();
    _customCropShape = widget.cropShape.toLowerCase() == 'circle'
        ? CustomCropShape.Circle
        : CustomCropShape.Square;
  }

  @override
  void dispose() {
    _croppController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      width: double.infinity,
      height: double.infinity,
      decoration: BoxDecoration(
        color: FlutterFlowTheme.of(context).primaryBackground,
      ),
      child: Column(
        mainAxisSize: MainAxisSize.max,
        children: [
          Expanded(
            child: Padding(
              padding: EdgeInsetsDirectional.fromSTEB(0, 8, 0, 0),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(8),
                child: CustomImageCrop(
                  key: _croperKey,
                  cropController: _croppController,
                  image: MemoryImage(widget.originalImage.bytes!),
                  shape: _customCropShape,
                  cropPercentage: _getCropPercentage(),
                  backgroundColor: Colors.black,
                ),
              ),
            ),
          ),
          Padding(
            padding: EdgeInsetsDirectional.fromSTEB(0, 8, 0, 0),
            child: Row(
              mainAxisSize: MainAxisSize.max,
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                FFButtonWidget(
                  onPressed: () async {
                    _croppController.reset();
                  },
                  text: isWeb ? this.widget.resetText : '', //Reset
                  icon: Icon(
                    Icons.replay_outlined,
                    size: 15,
                  ),
                  options: FFButtonOptions(
                    height: 50,
                    padding: EdgeInsetsDirectional.fromSTEB(0, 0, 5, 0),
                    iconPadding: EdgeInsetsDirectional.fromSTEB(5, 0, 0, 0),
                    color: FlutterFlowTheme.of(context).secondaryBackground,
                    textStyle: FlutterFlowTheme.of(context).subtitle2.override(
                          fontFamily: 'Inter',
                          color: FlutterFlowTheme.of(context).secondaryColor,
                        ),
                    borderSide: BorderSide(
                      color: FlutterFlowTheme.of(context).secondaryColor,
                      width: 1,
                    ),
                    borderRadius: BorderRadius.circular(8),
                  ),
                ),
                Container(
                  height: 50,
                  decoration: BoxDecoration(
                    color: FlutterFlowTheme.of(context).secondaryBackground,
                    borderRadius: BorderRadius.circular(8),
                    border: Border.all(
                      color: FlutterFlowTheme.of(context).secondaryColor,
                    ),
                  ),
                  child: Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(5, 5, 5, 5),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        FlutterFlowIconButton(
                          borderColor: Colors.transparent,
                          borderRadius: 20,
                          borderWidth: 1,
                          buttonSize: 40,
                          icon: Icon(
                            Icons.zoom_out_outlined,
                            color: FlutterFlowTheme.of(context).secondaryColor,
                            size: 20,
                          ),
                          showLoadingIndicator: true,
                          onPressed: () async {
                            _croppController
                                .addTransition(CropImageData(scale: 0.95));
                          },
                        ),
                        Container(
                          width: 1,
                          height: 35,
                          decoration: BoxDecoration(
                            color: FlutterFlowTheme.of(context).secondaryColor,
                          ),
                        ),
                        if (responsiveVisibility(
                          context: context,
                          phone: false,
                        ))
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(5, 0, 5, 0),
                            child: Text(
                              this.widget.zoomText, //'Zoom',
                              style: FlutterFlowTheme.of(context)
                                  .bodyText1
                                  .override(
                                    fontFamily: 'Inter',
                                    color: FlutterFlowTheme.of(context)
                                        .secondaryColor,
                                  ),
                            ),
                          ),
                        Container(
                          width: 1,
                          height: 35,
                          decoration: BoxDecoration(
                            color: FlutterFlowTheme.of(context).secondaryColor,
                          ),
                        ),
                        FlutterFlowIconButton(
                          borderColor: Colors.transparent,
                          borderRadius: 20,
                          borderWidth: 1,
                          buttonSize: 40,
                          icon: Icon(
                            Icons.zoom_in_rounded,
                            color: FlutterFlowTheme.of(context).secondaryColor,
                            size: 20,
                          ),
                          showLoadingIndicator: true,
                          onPressed: () async {
                            _croppController
                                .addTransition(CropImageData(scale: 1.12));
                          },
                        ),
                      ],
                    ),
                  ),
                ),
                Container(
                  height: 50,
                  decoration: BoxDecoration(
                    color: FlutterFlowTheme.of(context).secondaryBackground,
                    borderRadius: BorderRadius.circular(8),
                    border: Border.all(
                      color: FlutterFlowTheme.of(context).secondaryColor,
                    ),
                  ),
                  child: Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(5, 5, 5, 5),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        FlutterFlowIconButton(
                          borderColor: Colors.transparent,
                          borderRadius: 20,
                          borderWidth: 1,
                          buttonSize: 40,
                          icon: Icon(
                            Icons.rotate_left_rounded,
                            color: FlutterFlowTheme.of(context).secondaryColor,
                            size: 20,
                          ),
                          showLoadingIndicator: true,
                          onPressed: () async {
                            _croppController
                                .addTransition(CropImageData(angle: -pi / 4));
                          },
                        ),
                        Container(
                          width: 1,
                          height: 35,
                          decoration: BoxDecoration(
                            color: FlutterFlowTheme.of(context).secondaryColor,
                          ),
                        ),
                        if (responsiveVisibility(
                          context: context,
                          phone: false,
                        ))
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(5, 0, 5, 0),
                            child: Text(
                              this.widget.rotateText, //'Rotate'
                              style: FlutterFlowTheme.of(context)
                                  .bodyText1
                                  .override(
                                    fontFamily: 'Inter',
                                    color: FlutterFlowTheme.of(context)
                                        .secondaryColor,
                                  ),
                            ),
                          ),
                        Container(
                          width: 1,
                          height: 35,
                          decoration: BoxDecoration(
                            color: FlutterFlowTheme.of(context).secondaryColor,
                          ),
                        ),
                        FlutterFlowIconButton(
                          borderColor: Colors.transparent,
                          borderRadius: 20,
                          borderWidth: 1,
                          buttonSize: 40,
                          icon: Icon(
                            Icons.rotate_right_rounded,
                            color: FlutterFlowTheme.of(context).secondaryColor,
                            size: 20,
                          ),
                          showLoadingIndicator: true,
                          onPressed: () async {
                            _croppController
                                .addTransition(CropImageData(angle: pi / 4));
                          },
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),
          Padding(
            padding: EdgeInsetsDirectional.fromSTEB(0, 8, 0, 0),
            child: Row(
              mainAxisSize: MainAxisSize.max,
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                FFButtonWidget(
                  onPressed: () async {
                    this.widget.onCancel.call();
                  },
                  text: this.widget.cancelText, //Cancel,
                  options: FFButtonOptions(
                    height: 50,
                    padding: EdgeInsetsDirectional.fromSTEB(5, 0, 5, 0),
                    iconPadding: EdgeInsetsDirectional.fromSTEB(5, 0, 0, 0),
                    color: FlutterFlowTheme.of(context).secondaryBackground,
                    textStyle: FlutterFlowTheme.of(context).subtitle2.override(
                          fontFamily: 'Inter',
                          color: FlutterFlowTheme.of(context).secondaryColor,
                        ),
                    borderSide: BorderSide(
                      color: FlutterFlowTheme.of(context).secondaryColor,
                      width: 1,
                    ),
                    borderRadius: BorderRadius.circular(8),
                  ),
                ),
                FFButtonWidget(
                  onPressed: () async {
                    await _cropImage();
                  },
                  text: this.widget.saveText, //Save
                  options: FFButtonOptions(
                    height: 50,
                    padding: EdgeInsetsDirectional.fromSTEB(5, 0, 5, 0),
                    iconPadding: EdgeInsetsDirectional.fromSTEB(5, 5, 5, 5),
                    color: FlutterFlowTheme.of(context).secondaryColor,
                    textStyle: FlutterFlowTheme.of(context).subtitle2.override(
                          fontFamily: 'Inter',
                          color: FlutterFlowTheme.of(context).secondaryColor,
                        ),
                    borderRadius: BorderRadius.circular(8),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  double _getCropPercentage() {
    if (widget.cropPercentage < 0) {
      return 0.1;
    } else if (widget.cropPercentage > 1) {
      return 1.0;
    }

    return widget.cropPercentage;
  }

  Future<void> _cropImage() async {
    final croppedImage = await _croppController.onCropImage();
    _shareState.croppedImageData = FFUploadedFile(
      name: widget.originalImage.name,
      bytes: croppedImage!.bytes,
      height: widget.originalImage.height,
      width: widget.originalImage.width,
    );
    await widget.onCrop.call();
  }
}
